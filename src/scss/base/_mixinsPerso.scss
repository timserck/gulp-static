//breakpoint mixin
@mixin breakpoint($value, $width-type: "min") {
    @media only screen and (#{$width-type}-width: $value) {
        @content
    }
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

//breakpoint clearfix
@mixin clearfix {
    &:after {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0;
    }
}

@mixin size ($w: 50px, $h: 50px) {
    width: $w;
    height: $h;
}

// create circle
@mixin circle($size: 50px) {
    width: $size;
    height: $size;
    border-radius: $size / 2;
}

// create triangles
@mixin triangle($direction: "bottom", $width: 15px, $height: 15px, $color: red) {
    width: 0;
    height: 0;
    border-style: solid;
    @if $direction=="top-left" {
        border-width: $height $width 0 0;
        border-color: $color transparent transparent transparent;
    }
    @else if $direction=="top" {
        border-width: 0 $width $height $width;
        border-color: transparent transparent $color transparent;
    }
    @else if $direction=="top-right" {
        border-width: 0 $width $height 0;
        border-color: transparent $color transparent transparent;
    }
    @else if $direction=="right" {
        border-width: $height 0 $height $width;
        border-color: transparent transparent transparent $color;
    }
    @else if $direction=="bottom-right" {
        border-width: 0 0 $height $width;
        border-color: transparent transparent $color transparent;
    }
    @else if $direction=="bottom" {
        border-width: $height $width 0 $width;
        border-color: $color transparent transparent transparent;
    }
    @else if $direction=="bottom-left" {
        border-width: $height 0 0 $width;
        border-color: transparent transparent transparent $color;
    }
    @else if $direction=="left" {
        border-width: $height $width $height 0;
        border-color: transparent transparent transparent $color;
    }
}

//center element, specifie axes and position
@mixin center($axis: all, $position: absolute) {
    position: $position;
    @if $axis=="all" {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    @else if $axis=="x" or $axis=="horizontal" {
        left: 50%;
        transform: translateX(-50%);
    }
    @else if $axis=="y" or $axis=="vertical" {
        top: 50%;
        transform: translateY(-50%);
    }
}

//  create a hamburger menu
@mixin hamburger-menu($position: relative, $height: 20px, $color: #424342) {
    $width: $height / 3 + $height;
    right: -$width * 2;
    width: $width;
    height: $height;
    background: none;
    position: $position;
    &:before {
        content: "";
        position: absolute;
        left: 0;
        top: 0px;
        width: $width;
        height: $height / 5;
        background: $color;
        box-shadow: 0 $height / 5 * 2 0 0 $color, 0 $height / 5 * 4 0 0 $color;
    }
}

// create a cross icon
@mixin cross-icon($crossSize: 10px, $barsWidth: 40px, $crossColor: red) {
    width: $crossSize;
    height: $crossSize;
    margin: 0 auto;
    position: relative;
    &:before,
    &:after {
        content: "";
        display: block;
        background: $crossColor;
        @include border-radius($barsWidth / 2);
        @include center;
    }
    &:before {
        width: $barsWidth;
        height: 100%;
    }
    &:after {
        height: $barsWidth;
        width: 100%;
    }
}

// make material design box-shadow
@mixin material-shadow($level: 1) {
    @if $level==1 {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    }
    @else if $level==2 {
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    }
    @else if $level==3 {
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    }
    @else if $level==4 {
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }
    @else if $level==5 {
        box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
    }
}


@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}


@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
    font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
    @if $size { font-size: $size; }
    @if $colour { color: $colour; }
    @if $weight { font-weight: $weight; }
    @if $lh { line-height: $lh; }
}


@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}



